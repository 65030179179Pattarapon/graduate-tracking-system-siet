// src/pages/Admin_Page/AddStudentPage.jsx
import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import styles from './ManageStudentDetailPage.module.css'; // ‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ô
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { 
    faUserCog, faUser, faBook, faUsers, faFileAlt, faHistory, 
    faArrowLeft, faSave, faUserPlus, faEye, faEyeSlash, faSyncAlt,
    faUserGraduate // üëà ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏î‡∏´‡∏≤‡∏¢‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà
} from '@fortawesome/free-solid-svg-icons';
import _ from 'lodash';

// State ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÄ‡∏õ‡∏•‡πà‡∏≤
const INITIAL_NEW_STUDENT = {
    student_id: '',
    prefix_th: '',
    first_name_th: '',
    last_name_th: '',
    middle_name_th: '',
    prefix_en: 'Mr.',
    first_name_en: '',
    last_name_en: '',
    middle_name_en: '',
    email: '',
    password: '',
    confirm_password: '',
    phone: '',
    gender: '‡∏ä‡∏≤‡∏¢',
    degree: '‡∏õ‡∏£‡∏¥‡∏ç‡∏ç‡∏≤‡πÇ‡∏ó',
    program: '',
    major: '',
    student_status: '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏®‡∏∂‡∏Å‡∏©‡∏≤',
    entry_year: '',
    entry_semester: '1',
    entry_type: '‡∏õ‡∏Å‡∏ï‡∏¥',
    study_plan: '',
    profile_img: null,
    publications: [],
    related_files: [],
};

// --- Main Page Component ---
function AddStudentPage() {
    const navigate = useNavigate();
    const [formData, setFormData] = useState(INITIAL_NEW_STUDENT);
    const [advisors, setAdvisors] = useState([]);
    const [activeSection, setActiveSection] = useState('account');
    const [showPassword, setShowPassword] = useState(false);

    // Fetch ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Dropdown
    useEffect(() => {
        const fetchRequiredData = async () => {
            try {
                const advisorsRes = await fetch('/data/advisor.json');
                const advisorsData = await advisorsRes.json();
                setAdvisors(advisorsData);
            } catch (error) {
                console.error("Failed to fetch advisors", error);
                alert("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡πÑ‡∏î‡πâ");
            }
        };
        fetchRequiredData();
    }, []);

    const handleInputChange = (e) => {
        const { name, value } = e.target;
        setFormData(prev => ({ ...prev, [name]: value }));
    };
    
    const generatePassword = () => {
        const chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
        let password = '';
        for (let i = 0; i < 12; i++) {
            password += chars.charAt(Math.floor(Math.random() * chars.length));
        }
        setFormData(prev => ({...prev, password: password, confirm_password: password}));
    };

    const handleSave = () => {
        // --- Validation ---
        if (!formData.student_id || !formData.email || !formData.password) {
            alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô: ‡∏£‡∏´‡∏±‡∏™‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤, ‡∏≠‡∏µ‡πÄ‡∏°‡∏• ‡πÅ‡∏•‡∏∞‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô");
            setActiveSection('account');
            return;
        }
        if (formData.password !== formData.confirm_password) {
            alert("‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô");
            setActiveSection('account');
            return;
        }

        // --- Logic ‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å ---
        let allStudents = JSON.parse(localStorage.getItem('savedStudents') || '[]');
        const existingStudent = allStudents.find(s => s.student_id === formData.student_id);

        if (existingStudent) {
            alert("‡∏°‡∏µ‡∏£‡∏´‡∏±‡∏™‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏ô‡∏µ‡πâ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏ä‡πâ‡∏£‡∏´‡∏±‡∏™‡∏≠‡∏∑‡πà‡∏ô");
            return;
        }

        const finalStudentData = { ...formData };
        delete finalStudentData.confirm_password; // ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏Å‡πá‡∏ö confirm_password

        allStudents.push(finalStudentData);
        localStorage.setItem('savedStudents', JSON.stringify(allStudents));
        
        alert(`‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÉ‡∏´‡∏°‡πà (${formData.first_name_th}) ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!`);
        navigate('/admin/manage-users'); // ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
    };

    // --- Data ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Dropdown ---
    const academicData = {
        programsByDegree: {
            '‡∏õ‡∏£‡∏¥‡∏ç‡∏ç‡∏≤‡πÇ‡∏ó': ["‡∏ß‡∏ó.‡∏°. ‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡πÅ‡∏•‡∏∞‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ", "‡∏ß‡∏ó.‡∏°. ‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏®‡∏∂‡∏Å‡∏©‡∏≤", "‡∏Ñ.‡∏≠.‡∏°. ‡∏ô‡∏ß‡∏±‡∏ï‡∏Å‡∏£‡∏£‡∏°‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡∏à‡∏±‡∏¢‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ", "‡∏ß‡∏ó.‡∏°. ‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÄ‡∏Å‡∏©‡∏ï‡∏£", "‡∏Ñ.‡∏≠.‡∏°. ‡∏Å‡∏≤‡∏£‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤", "‡∏Ñ.‡∏≠.‡∏°. ‡∏ß‡∏¥‡∏®‡∏ß‡∏Å‡∏£‡∏£‡∏°‡πÑ‡∏ü‡∏ü‡πâ‡∏≤‡∏™‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£", "‡∏Ñ.‡∏≠.‡∏°. ‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏ú‡∏•‡∏¥‡∏ï‡∏†‡∏±‡∏ì‡∏ë‡πå‡∏≠‡∏∏‡∏ï‡∏™‡∏≤‡∏´‡∏Å‡∏£‡∏£‡∏°"],
            '‡∏õ‡∏£‡∏¥‡∏ç‡∏ç‡∏≤‡πÄ‡∏≠‡∏Å': ["‡∏Ñ.‡∏≠.‡∏î. ‡∏ô‡∏ß‡∏±‡∏ï‡∏Å‡∏£‡∏£‡∏°‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡∏à‡∏±‡∏¢‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ", "‡∏Ñ.‡∏≠.‡∏î. ‡∏Å‡∏≤‡∏£‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤", "‡∏õ‡∏£.‡∏î. ‡∏™‡∏≤‡∏Ç‡∏≤‡∏ß‡∏¥‡∏ä‡∏≤‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏ú‡∏•‡∏¥‡∏ï‡∏†‡∏±‡∏ì‡∏ë‡πå‡∏≠‡∏∏‡∏ï‡∏™‡∏≤‡∏´‡∏Å‡∏£‡∏£‡∏°", "‡∏õ‡∏£.‡∏î. ‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏®‡∏∂‡∏Å‡∏©‡∏≤", "‡∏õ‡∏£.‡∏î. ‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÄ‡∏Å‡∏©‡∏ï‡∏£", "‡∏õ‡∏£.‡∏î. ‡∏ß‡∏¥‡∏®‡∏ß‡∏Å‡∏£‡∏£‡∏°‡πÑ‡∏ü‡∏ü‡πâ‡∏≤‡∏®‡∏∂‡∏Å‡∏©‡∏≤"]
        },
        majors: [ '‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡πÅ‡∏•‡∏∞‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ', '‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏®‡∏∂‡∏Å‡∏©‡∏≤', '‡∏ô‡∏ß‡∏±‡∏ï‡∏Å‡∏£‡∏£‡∏°‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡∏à‡∏±‡∏¢‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ', '‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÄ‡∏Å‡∏©‡∏ï‡∏£', '‡∏Å‡∏≤‡∏£‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤', '‡∏ß‡∏¥‡∏®‡∏ß‡∏Å‡∏£‡∏£‡∏°‡πÑ‡∏ü‡∏ü‡πâ‡∏≤‡∏™‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£', '‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏ú‡∏•‡∏¥‡∏ï‡∏†‡∏±‡∏ì‡∏ë‡πå‡∏≠‡∏∏‡∏ï‡∏™‡∏≤‡∏´‡∏Å‡∏£‡∏£‡∏°' ],
        entryTypes: ['‡∏õ‡∏Å‡∏ï‡∏¥', '‡∏û‡∏¥‡πÄ‡∏®‡∏©', '‡∏™‡∏°‡∏ó‡∏ö'],
        studyPlans: ['‡πÅ‡∏ú‡∏ô ‡∏Å ‡πÅ‡∏ö‡∏ö ‡∏Å2', '‡πÅ‡∏ö‡∏ö 1.1', '‡πÅ‡∏ö‡∏ö 2.1']
    };
    const generateYearOptions = () => {
        const currentBuddhistYear = new Date().getFullYear() + 543;
        const years = [];
        for (let i = 0; i < 20; i++) { years.push(currentBuddhistYear - i); }
        return years;
    };
    const yearOptions = generateYearOptions();

    // --- JSX Return ---
    return (
        <div className={styles.pageLayout}>
            {/* Sidebar */}
            <aside className={styles.sidebar}>
                <div className={styles.studentProfileCard}>
                    <div className={styles.profileImageContainer}>
                        <div className={styles.noImagePlaceholder}><FontAwesomeIcon icon={faUserPlus} size="2x"/></div>
                    </div>
                    <div className={styles.studentName}>‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÉ‡∏´‡∏°‡πà</div>
                    <div className={styles.studentId}>‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô</div>
                </div>
                <hr className={styles.divider} />
                <button className={`${styles.sidebarBtn} ${activeSection === 'account' ? styles.active : ''}`} onClick={() => setActiveSection('account')}>
                    <FontAwesomeIcon icon={faUserCog} /><span>‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ç‡∏ä‡∏µ</span>
                </button>
                <button className={`${styles.sidebarBtn} ${activeSection === 'info' ? styles.active : ''}`} onClick={() => setActiveSection('info')}>
                    <FontAwesomeIcon icon={faUser} /><span>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ/‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤</span>
                </button>
                <hr className={styles.divider} />
                <button className={styles.sidebarBtn} onClick={() => navigate('/admin/manage-users')}>
                    <FontAwesomeIcon icon={faArrowLeft} /><span>‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠</span>
                </button>
            </aside>

            {/* Main Content */}
            <main className={styles.mainContent}>
                <div className={styles.contentHeader}>
                    <h1><FontAwesomeIcon icon={faUserGraduate} /> ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÉ‡∏´‡∏°‡πà</h1>
                    <button className={styles.saveButton} onClick={handleSave}>
                        <FontAwesomeIcon icon={faSave} /> ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤
                    </button>
                </div>

                {/* Account Section */}
                {activeSection === 'account' && (
                    <div className={styles.card}>
                        <h3><FontAwesomeIcon icon={faUserCog} /> ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ç‡∏ä‡∏µ</h3>
                        <div className={styles.cardBody}>
                            <div className={styles.formSection}>
                                <h4>‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô</h4>
                                <div className={styles.formGrid}>
                                    <div className={styles.formGroup} style={{ gridColumn: '1 / -1' }}>
                                        <label>‡∏≠‡∏µ‡πÄ‡∏°‡∏• (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö)</label>
                                        <input type="email" name="email" placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏ä‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö" value={formData.email} onChange={handleInputChange} required />
                                    </div>
                                    <div className={styles.formGroup}>
                                        <label>‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô</label>
                                        <div className={styles.passwordInputWrapper}>
                                            <input type={showPassword ? 'text' : 'password'} name="password" placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô" value={formData.password} onChange={handleInputChange} required />
                                            <FontAwesomeIcon icon={faSyncAlt} className={styles.passwordIcon} onClick={generatePassword} title="‡∏™‡∏∏‡πà‡∏°‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà" />
                                        </div>
                                    </div>
                                    <div className={styles.formGroup}>
                                        <label>‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô</label>
                                        <div className={styles.passwordInputWrapper}>
                                            <input type={showPassword ? 'text' : 'password'} name="confirm_password" value={formData.confirm_password} onChange={handleInputChange} placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á" required />
                                            <FontAwesomeIcon icon={showPassword ? faEyeSlash : faEye} className={styles.passwordIcon} style={{ right: '40px' }} onClick={() => setShowPassword(!showPassword)} />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                )}

                {/* Info Section */}
                {activeSection === 'info' && (
                    <>
                        <div className={styles.card}>
                            <h3>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ</h3>
                            <div className={styles.cardBody}>
                                <div className={`${styles.formGrid} ${styles.fourCols}`}>
                                    <div className={styles.formGroup} style={{ gridColumn: '1 / -1' }}><label>‡∏£‡∏´‡∏±‡∏™‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤</label><input type="text" name="student_id" value={formData.student_id} onChange={handleInputChange} required /></div>
                                    <div className={styles.formGroup}><label>‡∏Ñ‡∏≥‡∏ô‡∏≥‡∏´‡∏ô‡πâ‡∏≤ (‡πÑ‡∏ó‡∏¢)</label><input type="text" name="prefix_th" value={formData.prefix_th} onChange={handleInputChange} /></div>
                                    <div className={styles.formGroup}><label>‡∏ä‡∏∑‡πà‡∏≠ (‡πÑ‡∏ó‡∏¢)</label><input type="text" name="first_name_th" value={formData.first_name_th} onChange={handleInputChange} /></div>
                                    <div className={styles.formGroup}><label>‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏≤‡∏á (‡πÑ‡∏ó‡∏¢)</label><input type="text" name="middle_name_th" placeholder="(‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)" value={formData.middle_name_th} onChange={handleInputChange} /></div>
                                    <div className={styles.formGroup}><label>‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏• (‡πÑ‡∏ó‡∏¢)</label><input type="text" name="last_name_th" value={formData.last_name_th} onChange={handleInputChange} /></div>
                                    <div className={styles.formGroup}><label>‡∏Ñ‡∏≥‡∏ô‡∏≥‡∏´‡∏ô‡πâ‡∏≤ (‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©)</label><select name="prefix_en" value={formData.prefix_en} onChange={handleInputChange}><option value="Mr.">Mr.</option><option value="Mrs.">Mrs.</option><option value="Ms.">Ms.</option></select></div>
                                    <div className={styles.formGroup}><label>First Name (‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©)</label><input type="text" name="first_name_en" value={formData.first_name_en} onChange={handleInputChange} /></div>
                                    <div className={styles.formGroup}><label>Middle Name (‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©)</label><input type="text" name="middle_name_en" placeholder="(Optional)" value={formData.middle_name_en} onChange={handleInputChange} /></div>
                                    <div className={styles.formGroup}><label>Last Name (‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©)</label><input type="text" name="last_name_en" value={formData.last_name_en} onChange={handleInputChange} /></div>
                                    <div className={styles.formGroup}><label>‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå</label><input type="tel" name="phone" value={formData.phone} onChange={handleInputChange} /></div>
                                    <div className={styles.formGroup}><label>‡πÄ‡∏û‡∏®</label><select name="gender" value={formData.gender} onChange={handleInputChange}><option value="‡∏ä‡∏≤‡∏¢">‡∏ä‡∏≤‡∏¢</option><option value="‡∏´‡∏ç‡∏¥‡∏á">‡∏´‡∏ç‡∏¥‡∏á</option><option value="‡∏≠‡∏∑‡πà‡∏ô‡πÜ">‡∏≠‡∏∑‡πà‡∏ô‡πÜ</option></select></div>
                                </div>
                            </div>
                        </div>
                        <div className={styles.card}>
                            <h3>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤</h3>
                            <div className={styles.cardBody}>
                                <div className={`${styles.formGrid} ${styles.fourCols}`}>
                                    <div className={styles.formGroup}><label>‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤</label><select name="degree" value={formData.degree} onChange={handleInputChange}><option value="‡∏õ‡∏£‡∏¥‡∏ç‡∏ç‡∏≤‡πÇ‡∏ó">‡∏õ‡∏£‡∏¥‡∏ç‡∏ç‡∏≤‡πÇ‡∏ó</option><option value="‡∏õ‡∏£‡∏¥‡∏ç‡∏ç‡∏≤‡πÄ‡∏≠‡∏Å">‡∏õ‡∏£‡∏¥‡∏ç‡∏ç‡∏≤‡πÄ‡∏≠‡∏Å</option></select></div>
                                    <div className={styles.formGroup}><label>‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£</label><select name="program" value={formData.program} onChange={handleInputChange}><option value="">-- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£ --</option>{academicData.programsByDegree[formData.degree]?.map(p => <option key={p} value={p}>{p}</option>)}</select></div>
                                    <div className={styles.formGroup}><label>‡∏™‡∏≤‡∏Ç‡∏≤‡∏ß‡∏¥‡∏ä‡∏≤</label><select name="major" value={formData.major} onChange={handleInputChange}><option value="">-- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏≤‡∏Ç‡∏≤‡∏ß‡∏¥‡∏ä‡∏≤ --</option>{academicData.majors.map(m => <option key={m} value={m}>{m}</option>)}</select></div>
                                    <div className={styles.formGroup}><label>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤</label><select name="student_status" value={formData.student_status} onChange={handleInputChange}><option value="‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏®‡∏∂‡∏Å‡∏©‡∏≤">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏®‡∏∂‡∏Å‡∏©‡∏≤</option><option value="‡∏û‡πâ‡∏ô‡∏™‡∏†‡∏≤‡∏û">‡∏û‡πâ‡∏ô‡∏™‡∏†‡∏≤‡∏û</option><option value="‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤">‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤</option></select></div>
                                    <div className={styles.formGroup}><label>‡∏õ‡∏µ‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤</label><select name="entry_year" value={formData.entry_year} onChange={handleInputChange}><option value="">-- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏µ --</option>{yearOptions.map(year => <option key={year} value={year}>{year}</option>)}</select></div>
                                    <div className={styles.formGroup}><label>‡∏†‡∏≤‡∏Ñ‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤</label><select name="entry_semester" value={formData.entry_semester} onChange={handleInputChange}><option value="1">1</option><option value="2">2</option><option value="‡∏†‡∏≤‡∏Ñ‡∏û‡∏¥‡πÄ‡∏®‡∏©">‡∏†‡∏≤‡∏Ñ‡∏û‡∏¥‡πÄ‡∏®‡∏©</option></select></div>
                                    <div className={styles.formGroup}><label>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤</label><select name="entry_type" value={formData.entry_type} onChange={handleInputChange}><option value="">-- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó --</option>{academicData.entryTypes.map(t => <option key={t} value={t}>{t}</option>)}</select></div>
                                    <div className={styles.formGroup}><label>‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô</label><select name="study_plan" value={formData.study_plan} onChange={handleInputChange}><option value="">-- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏ú‡∏ô --</option>{academicData.studyPlans.map(p => <option key={p} value={p}>{p}</option>)}</select></div>
                                </div>
                            </div>
                        </div>
                    </>
                )}

            </main>
        </div>
    );
}

export default AddStudentPage;