import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import styles from './Login.module.css';
import logo from '../../assets/images/logo.png';

function LoginPage() {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [error, setError] = useState('');
  const navigate = useNavigate();

  const handleLogin = async (e) => {
    e.preventDefault();
    setError('');

    async function fetchAllUsers() {
      const roles = [
        { file: "student.json", role: "student" },
        { file: "admin.json", role: "admin" },
        { file: "advisor.json", role: "advisor" },
      ];
      const allUsers = {};
      for (const roleItem of roles) {
        try {
          const response = await fetch(`/data/${roleItem.file}`);
          if (response.ok) {
            const data = await response.json();
            data.forEach(user => {
              if (user && typeof user.email === 'string') {
                allUsers[user.email.toLowerCase()] = { ...user, role: roleItem.role };
              }
            });
          }
        } catch (error) {
          console.error(`Error processing ${roleItem.file}:`, error);
        }
      }
      return allUsers;
    }

    const users = await fetchAllUsers();
    const formattedEmail = email.toLowerCase().trim();

    if (!users[formattedEmail]) {
      setError("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ô‡∏µ‡πâ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö!");
      return;
    }

    if (users[formattedEmail].password !== password) {
      setError("‚ùå ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á!");
      return;
    }

  const currentUser = users[formattedEmail];
    localStorage.setItem("current_user", formattedEmail);
    localStorage.setItem("role", currentUser.role);
    const userFullName = `${currentUser.prefix_th || ''}${currentUser.first_name_th || currentUser.fullname || ''} ${currentUser.last_name_th || ''}`.trim();
    localStorage.setItem("current_user_name", userFullName);
    localStorage.setItem("student_id", currentUser.student_id);

    const userRole = currentUser.role;

    if (userRole === 'admin') {
      // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô Admin ‡πÉ‡∏´‡πâ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á Admin ‡πÄ‡∏•‡∏¢
      navigate('/admin'); 
    } else if (userRole === 'student' || userRole === 'advisor') {
      // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô Student ‡∏´‡∏£‡∏∑‡∏≠ Advisor ‡πÉ‡∏´‡πâ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡πÄ‡∏Ñ‡∏¢‡πÄ‡∏ã‡πá‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
      const hasSigned = localStorage.getItem(`${formattedEmail}_signed`) === "true";
      if (hasSigned) {
        // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏Ñ‡∏¢‡πÄ‡∏ã‡πá‡∏ô‡πÅ‡∏•‡πâ‡∏ß ‡πÉ‡∏´‡πâ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ Home ‡∏Ç‡∏≠‡∏á Role ‡∏ô‡∏±‡πâ‡∏ô‡πÜ
        navigate(`/${userRole}/home`);
      } else {
        // ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏Ñ‡∏¢‡πÄ‡∏ã‡πá‡∏ô ‡πÉ‡∏´‡πâ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô
        navigate('/signature');
      }
    } else {
      // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Role ‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç
      setError("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏ñ‡∏±‡∏î‡πÑ‡∏õ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ");
    }
  };

  return (
    <div className={styles.loginPageContainer}>
      <div className={styles.loginContainer}>
        <div className={styles.loginBox}>
          <img src={logo} alt="KMITL Logo" className={styles.logo} />
          <h1>Graduate Student Tracking System</h1>
          <p>‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏î‡πâ‡∏ß‡∏¢‡∏ö‡∏±‡∏ç‡∏ä‡∏µ <strong>@kmitl.ac.th</strong> ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô</p>
          <form onSubmit={handleLogin} className={styles.loginForm}>
            
            <div className={styles.inputGroup}>
              <label htmlFor="email">Email ‡∏™‡∏ñ‡∏≤‡∏ö‡∏±‡∏ô</label>
              <input
                type="email"
                id="email"
                placeholder="Email ‡∏™‡∏ñ‡∏≤‡∏ö‡∏±‡∏ô"
                required
                value={email}
                onChange={(e) => setEmail(e.target.value)}
              />
            </div>

            <div className={styles.inputGroup}>
              <label htmlFor="password">‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô</label>
              <input
                type="password"
                id="password"
                placeholder="‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô"
                required
                value={password}
                onChange={(e) => setPassword(e.target.value)}
              />
            </div>

            <button type="submit">üöÄ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö</button>
            {error && <p className={styles.errorMsg}>{error}</p>}
          </form>
        </div>
      </div>
    </div>
  );
}

export default LoginPage;

