import React, { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import styles from './AdvisorHomePage.module.css';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { faFileSignature, faUsers, faBell, faArrowRight } from '@fortawesome/free-solid-svg-icons';

function AdvisorHomePage() {
    const [advisorName, setAdvisorName] = useState('');
    const [pendingDocs, setPendingDocs] = useState([]);
    const [myAdvisees, setMyAdvisees] = useState([]);
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState(null);

    useEffect(() => {
        const fetchData = async () => {
            try {
                const advisorEmail = localStorage.getItem("current_user");
                if (!advisorEmail) throw new Error("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ");

                // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏±‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô
                const [advisorsRes, studentsRes] = await Promise.all([
                    fetch('/data/advisor.json'),
                    fetch('/data/student.json')
                ]);
                const advisors = await advisorsRes.json();
                const students = await studentsRes.json();
                
                // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡∏ó‡∏µ‡πà‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏≠‡∏¢‡∏π‡πà
                const currentAdvisor = advisors.find(a => a.email.toLowerCase() === advisorEmail.toLowerCase());
                if (!currentAdvisor) throw new Error("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå");
                
                setAdvisorName(`${currentAdvisor.prefix_th}${currentAdvisor.first_name_th}`);

                // 1. ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÉ‡∏ô‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤
                const advisees = students.filter(s => 
                    s.main_advisor_id === currentAdvisor.advisor_id || 
                    s.co_advisor1_id === currentAdvisor.advisor_id
                );
                setMyAdvisees(advisees);

                // 2. ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥
                const waitingDocsList = JSON.parse(localStorage.getItem('localStorage_waitingAdvisorDocs') || '[]');
                const relevantDocs = waitingDocsList.filter(doc => 
                    doc.approvers?.some(approver => 
                        approver.advisor_id === currentAdvisor.advisor_id && approver.status === 'pending'
                    )
                );

                // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡∏∑‡πà‡∏≠‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏â‡∏ö‡∏±‡∏ö
                const docsWithStudentNames = relevantDocs.map(doc => {
                    const student = students.find(s => s.student_id === doc.student_id);
                    return {
                        ...doc,
                        studentName: student ? `${student.first_name_th} ${student.last_name_th}` : '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡∏∑‡πà‡∏≠'
                    };
                });
                
                setPendingDocs(docsWithStudentNames);

            } catch (err) {
                setError(err.message);
            } finally {
                setLoading(false);
            }
        };

        fetchData();
    }, []);

    const formatThaiDate = (isoString) => {
        if (!isoString) return '-';
        return new Date(isoString).toLocaleDateString('th-TH', {
            day: 'numeric', month: 'short', year: 'numeric'
        });
    };

    if (loading) return <div className={styles.loading}>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...</div>;
    if (error) return <div className={styles.error}>‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {error}</div>;

    return (
        <div className={styles.pageContainer}>
            <header className={styles.pageHeader}>
                <h1>‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö, {advisorName}</h1>
                <p>‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤</p>
            </header>

            <div className={styles.dashboardGrid}>
                {/* --- ‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏° --- */}
                <div className={`${styles.statCard} ${styles.pendingCard}`}>
                    <FontAwesomeIcon icon={faFileSignature} />
                    <div className={styles.statInfo}>
                        <span className={styles.statNumber}>{pendingDocs.length}</span>
                        <span className={styles.statLabel}>‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥</span>
                    </div>
                </div>
                <div className={`${styles.statCard} ${styles.adviseeCard}`}>
                    <FontAwesomeIcon icon={faUsers} />
                    <div className={styles.statInfo}>
                        <span className={styles.statNumber}>{myAdvisees.length}</span>
                        <span className={styles.statLabel}>‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÉ‡∏ô‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤</span>
                    </div>
                </div>

                {/* --- ‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡πà‡∏ß‡∏ô --- */}
                <div className={styles.actionCard}>
                    <h2><FontAwesomeIcon icon={faBell} /> ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡πà‡∏ß‡∏ô</h2>
                    <div className={styles.docList}>
                        {pendingDocs.length > 0 ? (
                            pendingDocs.map(doc => (
                                <Link to={`/advisor/docs/${doc.doc_id}`} key={doc.doc_id} className={styles.docItem}>
                                    <div className={styles.docInfo}>
                                        <span className={styles.docTitle}>{doc.title}</span>
                                        <span className={styles.docStudent}>‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤: {doc.studentName}</span>
                                    </div>
                                    <div className={styles.docMeta}>
                                        <span className={styles.docDate}>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á: {formatThaiDate(doc.submitted_date)}</span>
                                        <FontAwesomeIcon icon={faArrowRight} />
                                    </div>
                                </Link>
                            ))
                        ) : (
                            <div className={styles.emptyState}>
                                <p>üéâ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ</p>
                            </div>
                        )}
                    </div>
                </div>

                {/* --- ‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÉ‡∏ô‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤ --- */}
                <div className={styles.adviseesCard}>
                    <h2><FontAwesomeIcon icon={faUsers} /> ‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÉ‡∏ô‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤</h2>
                    <ul className={styles.adviseeList}>
                        {myAdvisees.slice(0, 5).map(student => (
                            <li key={student.student_id}>
                                <Link to={`/advisor/advisee/${student.student_id}`}>
                                    {student.first_name_th} {student.last_name_th}
                                </Link>
                            </li>
                        ))}
                    </ul>
                    {myAdvisees.length > 5 && (
                         <Link to="/advisor/advisees" className={styles.viewAllButton}>
                            ‡∏î‡∏π‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ({myAdvisees.length} ‡∏Ñ‡∏ô) <FontAwesomeIcon icon={faArrowRight} />
                        </Link>
                    )}
                     {myAdvisees.length === 0 && (
                        <div className={styles.emptyStateSmall}>
                            <p>‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÉ‡∏ô‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤</p>
                        </div>
                    )}
                </div>
            </div>
        </div>
    );
}

export default AdvisorHomePage;