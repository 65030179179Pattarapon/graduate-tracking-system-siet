import React, { useState, useEffect } from 'react'; // <--- ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ
import { Link } from 'react-router-dom';
import styles from './HomePage.module.css';

// --- Card Components ---
function StatusSummaryCard({ counts }) {
  return (
    <div className={styles.dashboardCard}>
      <h3>‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£</h3>
      <div className={styles.statusBoxes}>
        <div className={`${styles.box} ${styles.pending}`}><span>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£</span><strong>{counts.pending}</strong></div>
        <div className={`${styles.box} ${styles.rejected}`}><span>‡∏ï‡∏µ‡∏Å‡∏•‡∏±‡∏ö</span><strong>{counts.rejected}</strong></div>
        <div className={`${styles.box} ${styles.approved}`}><span>‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥</span><strong>{counts.approved}</strong></div>
      </div>
      <Link to="/student/status" className={styles.viewAllLink}>‡∏î‡∏π‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‚Üí</Link>
    </div>
  );
}
function QuickLinksCard() {
  return (
    <div className={styles.dashboardCard}>
      <h3>‡∏ó‡∏≤‡∏á‡∏•‡∏±‡∏î (Quick Links)</h3>
      <div className={styles.quickLinks}>
        <Link to="/student/form1" className={styles.quickLinkBtn}>‡∏¢‡∏∑‡πà‡∏ô‡∏Ç‡∏≠‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤ (‡∏ü‡∏≠‡∏£‡πå‡∏° 1)</Link>
        <Link to="/student/form2" className={styles.quickLinkBtn}>‡∏¢‡∏∑‡πà‡∏ô‡πÄ‡∏™‡∏ô‡∏≠‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠ (‡∏ü‡∏≠‡∏£‡πå‡∏° 2)</Link>
        <Link to="/student/eng" className={styles.quickLinkBtn}>‡∏¢‡∏∑‡πà‡∏ô‡∏ú‡∏•‡∏™‡∏≠‡∏ö‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©</Link>
        <Link to="/student/templates" className={styles.quickLinkBtn}>‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏ó‡∏°‡πÄ‡∏û‡∏•‡∏ï</Link>
      </div>
    </div>
  );
}
function NextStepCard({ approvedDocs, rejectedDocs }) {
  let nextStepContent = null;
  if (rejectedDocs.length > 0) {
    nextStepContent = (
      <div className={`${styles.nextStepBody} ${styles.alert}`}>
        <span className={styles.actionTitle}>‚ö†Ô∏è ‡∏°‡∏µ‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç</span>
        <p>‡∏£‡∏∞‡∏ö‡∏ö‡∏û‡∏ö‡∏ß‡πà‡∏≤‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö ({rejectedDocs.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£)</p>
        <Link to="/student/status" className={styles.actionButton}>‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£</Link>
      </div>
    );
  } else {
    const hasApproved = (formType) => approvedDocs.some(doc => doc.type === formType);
    if (!hasApproved('‡∏ü‡∏≠‡∏£‡πå‡∏° 1')) {
      nextStepContent = <div className={styles.nextStepBody}><span className={styles.actionTitle}>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤</span><p>‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡πÅ‡∏£‡∏Å‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡πà‡∏ô‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏£‡∏±‡∏ö‡∏£‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤</p><Link to="/student/form1" className={styles.actionButton}>‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏ü‡∏≠‡∏£‡πå‡∏° 1</Link></div>;
    } else if (!hasApproved('‡∏ü‡∏≠‡∏£‡πå‡∏° 2')) {
       nextStepContent = <div className={styles.nextStepBody}><span className={styles.actionTitle}>‡πÄ‡∏™‡∏ô‡∏≠‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏ô‡∏¥‡∏û‡∏ô‡∏ò‡πå</span><p>‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡πÄ‡∏™‡∏ô‡∏≠‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡πÅ‡∏•‡∏∞‡πÄ‡∏Ñ‡πâ‡∏≤‡πÇ‡∏Ñ‡∏£‡∏á‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏ô‡∏¥‡∏û‡∏ô‡∏ò‡πå</p><Link to="/student/form2" className={styles.actionButton}>‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏ü‡∏≠‡∏£‡πå‡∏° 2</Link></div>;
    } 
    else {
      nextStepContent = (
        <div className={`${styles.nextStepBody} ${styles.done}`}>
          <span className={styles.actionTitle}>üëç ‡∏¢‡∏≠‡∏î‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°!</span>
          <p>‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏ô‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô‡πÅ‡∏•‡πâ‡∏ß</p>
          <Link to="/student/status" className={styles.actionButton}>‡∏î‡∏π‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</Link>
        </div>
      );
    }
  }
  return (
    <div className={styles.dashboardCard}>
      <h3>‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì (Next Step)</h3>
      {nextStepContent}
    </div>
  );
}

function RecentActivitiesCard({ documents }) {
  return (
    <div className={styles.dashboardCard}>
      <h3>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î (Recent Activities)</h3>
      <ul className={styles.recentDocsList}>
        {documents.length > 0 ? (
          documents.slice(0, 5).map((doc, index) => (
            <li key={doc.doc_id || index}> {/* ‡πÉ‡∏ä‡πâ doc_id ‡πÄ‡∏õ‡πá‡∏ô key */}
              {/* --- ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡πÉ‡∏ä‡πâ doc.doc_id --- */}
              <Link to={`/student/docs/${doc.doc_id}`} className={styles.docTitle}>{doc.title}</Link>
              <span className={`${styles.docStatus} ${styles['status-' + doc.status]}`}>{doc.status}</span>
            </li>
          ))
        ) : (
          <li className={styles.noDocs}>‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡πà‡∏ô‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£</li>
        )}
      </ul>
    </div>
  );
}
// --- Main HomePage Component ---
function HomePage() {
  const [dashboardData, setDashboardData] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    const loadDashboard = async () => {
      try {
        const userEmail = localStorage.getItem("current_user");
        if (!userEmail) throw new Error("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ");

        const response = await fetch("/data/student.json");
        const students = await response.json();
        
        const currentUser = students.find(s => s.email === userEmail);
        if (!currentUser) throw new Error("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤");
        
        const baseDocs = currentUser.documents || [];
        const newPendingDocs = JSON.parse(localStorage.getItem('localStorage_pendingDocs') || '[]').filter(doc => doc.student_email === userEmail);
        const allDocuments = [...baseDocs, ...newPendingDocs];
        
        const approvedStates = ['‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß', '‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥', '‡∏ú‡πà‡∏≤‡∏ô‡πÄ‡∏Å‡∏ì‡∏ë‡πå'];
        const rejectedStates = ['‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥', '‡∏ï‡∏µ‡∏Å‡∏•‡∏±‡∏ö', '‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô‡πÄ‡∏Å‡∏ì‡∏ë‡πå'];

        const approvedDocs = allDocuments.filter(doc => approvedStates.includes(doc.status));
        const rejectedDocs = allDocuments.filter(doc => rejectedStates.includes(doc.status));
        const pendingDocs = allDocuments.filter(doc => !approvedStates.includes(doc.status) && !rejectedStates.includes(doc.status));
        
        allDocuments.sort((a, b) => new Date(b.submitted_date) - new Date(a.submitted_date));

        setDashboardData({
          name: `${currentUser.first_name_th} ${currentUser.last_name_th}`,
          counts: {
            pending: pendingDocs.length,
            approved: approvedDocs.length,
            rejected: rejectedDocs.length,
          },
          approvedDocs: approvedDocs,
          rejectedDocs: rejectedDocs,
          allDocuments: allDocuments,
        });

      } catch (err) {
        setError(err.message);
      } finally {
        setLoading(false);
      }
    };

    loadDashboard();
  }, []);

  if (loading) {
    return <div className={styles.loading}>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏î‡∏ä‡∏ö‡∏≠‡∏£‡πå‡∏î...</div>;
  }
  if (error) {
    return <div className={styles.error}>‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {error}</div>;
  }

  return (
    <div className={styles.dashboardContainer}>
      <div className={styles.dashboardHeader}>
        <h1>‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö, {dashboardData.name}!</h1>
        <p>‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∑‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì</p>
      </div>
      <div className={styles.dashboardLayout}>
        <div className={styles.mainColumn}>
          <NextStepCard 
            approvedDocs={dashboardData.approvedDocs} 
            rejectedDocs={dashboardData.rejectedDocs} 
          />
          <RecentActivitiesCard documents={dashboardData.allDocuments} />
        </div>
        <div className={styles.sideColumn}>
          <StatusSummaryCard counts={dashboardData.counts} />
          <QuickLinksCard />
        </div>
      </div>
    </div>
  );
}

export default HomePage;