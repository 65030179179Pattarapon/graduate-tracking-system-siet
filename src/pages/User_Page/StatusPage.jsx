import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom'; // ‚úÖ 1. Import useNavigate
import styles from './StatusPage.module.css';
import StatusColumn from '../../components/StatusColumn';

function StatusPage() {
  const [documents, setDocuments] = useState({ approved: [], pending: [], rejected: [] });
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const navigate = useNavigate(); // ‚úÖ 2. ‡∏™‡∏£‡πâ‡∏≤‡∏á navigate function

  useEffect(() => {
    const loadStatusData = async () => {
      try {
        const userEmail = localStorage.getItem("current_user");
        if (!userEmail) throw new Error("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ");

        const response = await fetch("/data/student.json");
        const students = await response.json();
        const currentUser = students.find(s => s.email === userEmail);
        if (!currentUser) throw new Error("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤");

        const baseDocs = currentUser.documents || [];

        const pendingDocs = JSON.parse(localStorage.getItem('localStorage_pendingDocs') || '[]');
        const approvedDocs = JSON.parse(localStorage.getItem('localStorage_approvedDocs') || '[]');
        const rejectedDocs = JSON.parse(localStorage.getItem('localStorage_rejectedDocs') || '[]');
        const waitingAdvisorDocs = JSON.parse(localStorage.getItem('localStorage_waitingAdvisorDocs') || '[]');
        
        const allLocalStorageDocs = [
            ...pendingDocs, 
            ...approvedDocs, 
            ...rejectedDocs, 
            ...waitingAdvisorDocs
        ];
        
        const userLocalStorageDocs = allLocalStorageDocs.filter(doc => doc.student_email === userEmail);
        
        const allDocs = [...baseDocs, ...userLocalStorageDocs];

        const approvedStates = ['‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß', '‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥', '‡∏ú‡πà‡∏≤‡∏ô‡πÄ‡∏Å‡∏ì‡∏ë‡πå'];
        const rejectedStates = ['‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥', '‡∏ï‡∏µ‡∏Å‡∏•‡∏±‡∏ö', '‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç', '‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô‡πÄ‡∏Å‡∏ì‡∏ë‡πå'];

        const uniqueDocs = Array.from(new Map(allDocs.map(doc => [doc.doc_id, doc])).values());

        const approved = uniqueDocs.filter(doc => approvedStates.includes(doc.status));
        const rejected = uniqueDocs.filter(doc => rejectedStates.includes(doc.status));
        const pending = uniqueDocs.filter(doc => !approvedStates.includes(doc.status) && !rejectedStates.includes(doc.status));
        
        const sortByDate = (a, b) => new Date(b.submitted_date || 0) - new Date(a.submitted_date || 0);
        approved.sort(sortByDate);
        pending.sort(sortByDate);
        rejected.sort(sortByDate);

        setDocuments({ approved, pending, rejected });

      } catch (err) {
        setError(err.message);
      } finally {
        setLoading(false);
      }
    };
    loadStatusData();
  }, []);

  if (loading) return <div className={styles.loadingText}>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...</div>;
  if (error) return <div className={styles.errorText}>‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {error}</div>;

  return (
    <main className={styles.statusPageContainer}>
      <h1>üìÑ ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì</h1>
      <div className={styles.statusGrid}>
        {/* ‚úÖ 3. ‡∏™‡πà‡∏á navigate function ‡πÑ‡∏õ‡∏¢‡∏±‡∏á StatusColumn */}
        <StatusColumn 
            title="‚ùå ‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥ / ‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç" 
            statusType="rejected" 
            documents={documents.rejected} 
            navigate={navigate}
        />
        <StatusColumn 
            title="‚åõ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£" 
            statusType="pending" 
            documents={documents.pending} 
            navigate={navigate}
        />
        <StatusColumn 
            title="‚úîÔ∏è ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß" 
            statusType="approved" 
            documents={documents.approved} 
            navigate={navigate}
        />
      </div>
    </main>
  );
}

export default StatusPage;