import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import styles from './Form5Page.module.css';

const initialToolState = {
    '‡πÅ‡∏ö‡∏ö‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°': { checked: false, quantity: 1 },
    '‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö': { checked: false, quantity: 1 },
    '‡∏ó‡∏î‡∏•‡∏≠‡∏á‡∏™‡∏≠‡∏ô': { checked: false, quantity: 1 },
    '‡∏≠‡∏∑‡πà‡∏ô‡πÜ': { checked: false, quantity: 1, otherText: '' },
};

function Form5Page() {
  const navigate = useNavigate();

  const [displayData, setDisplayData] = useState(null);
  const [researchTools, setResearchTools] = useState(initialToolState);
  const [comment, setComment] = useState('');
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    const loadInitialData = async () => {
        try {
            const userEmail = localStorage.getItem("current_user");
            if (!userEmail) throw new Error("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ");

            const studentsRes = await fetch("/data/student.json");
            const students = await studentsRes.json();
            const currentUser = students.find(s => s.email === userEmail);
            if (!currentUser) throw new Error("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤");

            // --- ‚úÖ ‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Logic ---
            const baseDocs = currentUser.documents || [];
            const newPendingDocs = JSON.parse(localStorage.getItem('localStorage_pendingDocs') || '[]').filter(doc => doc.student_email === userEmail);
            const allUserDocuments = [...baseDocs, ...newPendingDocs];
            
            // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ü‡∏≠‡∏£‡πå‡∏° 2 ‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
            const approvedForm2 = allUserDocuments.find(doc => doc.type === '‡∏ü‡∏≠‡∏£‡πå‡∏° 2' && (doc.status === '‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß' || doc.status === '‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥'));

            // ‡πÑ‡∏°‡πà throw error ‡πÅ‡∏•‡πâ‡∏ß ‡πÅ‡∏ï‡πà‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤ placeholder ‡πÅ‡∏ó‡∏ô
            const placeholder = "‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (‡∏£‡∏≠‡∏ü‡∏≠‡∏£‡πå‡∏° 2 ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥)";
            
            const programsRes = await fetch("/data/structures/programs.json");
            const programs = await programsRes.json();
            
            const programName = programs.find(p => p.id === currentUser.program_id)?.name || 'N/A';

            setDisplayData({
                fullname: `${currentUser.prefix_th || ''} ${currentUser.first_name_th || ''} ${currentUser.last_name_th || ''}`.trim(),
                student_id: currentUser.student_id,
                degree: currentUser.degree,
                programName: programName,
                email: currentUser.email,
                phone: currentUser.phone,
                proposal_approval_date: approvedForm2?.action_date, // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô undefined
                thesis_title_th: approvedForm2?.thesis_title_th || placeholder,
                thesis_title_en: approvedForm2?.thesis_title_en || placeholder,
            });
            // --- ‡∏à‡∏ö‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç ---

        } catch (err) {
            setError(err.message);
        } finally {
            setLoading(false);
        }
    };
    loadInitialData();
  }, []);

  const handleToolChange = (e) => {
    const { value, checked } = e.target;
    setResearchTools(prev => ({
        ...prev,
        [value]: { ...prev[value], checked: checked }
    }));
  };

  const handleQuantityChange = (toolName, quantity) => {
    const numQuantity = Math.max(1, parseInt(quantity, 10) || 1);
    setResearchTools(prev => ({
        ...prev,
        [toolName]: { ...prev[toolName], quantity: numQuantity }
    }));
  };

  const handleOtherTextChange = (e) => {
    const { value } = e.target;
    setResearchTools(prev => ({
        ...prev,
        '‡∏≠‡∏∑‡πà‡∏ô‡πÜ': { ...prev['‡∏≠‡∏∑‡πà‡∏ô‡πÜ'], otherText: value }
    }));
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    const userEmail = localStorage.getItem("current_user");

    const researchToolsData = Object.entries(researchTools)
        .filter(([_, data]) => data.checked)
        .map(([type, data]) => {
            let finalType = type;
            if (type === '‡∏≠‡∏∑‡πà‡∏ô‡πÜ') {
                if (!data.otherText.trim()) return null;
                finalType = `‡∏≠‡∏∑‡πà‡∏ô‡πÜ: ${data.otherText.trim()}`;
            }
            return { type: finalType, quantity: data.quantity };
        }).filter(Boolean);

    if (researchToolsData.length === 0) {
        alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡∏à‡∏±‡∏¢‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 1 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£");
        return;
    }

    const submissionData = {
        doc_id: `form5_${userEmail}_${Date.now()}`,
        type: "‡∏ü‡∏≠‡∏£‡πå‡∏° 5",
        title: "‡πÅ‡∏ö‡∏ö‡∏Ç‡∏≠‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ç‡∏≠‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏ß‡∏ö‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏ô‡∏¥‡∏û‡∏ô‡∏ò‡πå)",
        student_email: userEmail,
        student_id: displayData.student_id,
        details: { research_tools: researchToolsData },
        student_comment: comment,
        submitted_date: new Date().toISOString(),
        status: "‡∏£‡∏≠‡∏ï‡∏£‡∏ß‡∏à"
    };
    
    const existingPendingDocs = JSON.parse(localStorage.getItem('localStorage_pendingDocs') || '[]');
    existingPendingDocs.push(submissionData);
    localStorage.setItem('localStorage_pendingDocs', JSON.stringify(existingPendingDocs));
    
    alert("‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!");
    navigate("/student/status");
  };

  if (loading) return <div>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...</div>;
  if (error) return <div className={styles.formBlockedMessage}>‚ö†Ô∏è {error}</div>;

  return (
    <div className={styles.formContainer}>
      <h2>üìë ‡πÅ‡∏ö‡∏ö‡∏Ç‡∏≠‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏Ç‡∏≠‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏ß‡∏ö‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏ô‡∏¥‡∏û‡∏ô‡∏ò‡πå)</h2>
      <form onSubmit={handleSubmit}>
        <fieldset>
            <legend>üìå ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤</legend>
            <div className={`${styles.infoGrid} ${styles.threeCols}`}>
                <div><label>‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•:</label><input type="text" value={displayData?.fullname || ''} disabled /></div>
                <div><label>‡∏£‡∏´‡∏±‡∏™‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤:</label><input type="text" value={displayData?.student_id || ''} disabled /></div>
                <div><label>‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏õ‡∏£‡∏¥‡∏ç‡∏ç‡∏≤:</label><input type="text" value={displayData?.degree || ''} disabled /></div>
                <div className={styles.fullWidth}><label>‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£‡πÅ‡∏•‡∏∞‡∏™‡∏≤‡∏Ç‡∏≤‡∏ß‡∏¥‡∏ä‡∏≤:</label><input type="text" value={displayData?.programName || ''} disabled /></div>
                <div><label>‡∏≠‡∏µ‡πÄ‡∏°‡∏•:</label><input type="email" value={displayData?.email || ''} disabled /></div>
                <div><label>‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå:</label><input type="text" value={displayData?.phone || ''} disabled /></div>
            </div>
        </fieldset>
        <fieldset>
            <legend>üìñ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏ô‡∏¥‡∏û‡∏ô‡∏ò‡πå (‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥)</legend>
            <div className={styles.formGroup}>
                <label>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠:</label>
                {/* --- ‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà --- */}
                <input type="text" value={displayData?.proposal_approval_date ? new Date(displayData.proposal_approval_date).toLocaleDateString('th-TH', { year: 'numeric', month: 'long', day: 'numeric' }) : '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (‡∏£‡∏≠‡∏ü‡∏≠‡∏£‡πå‡∏° 2 ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥)'} disabled />
            </div>
            <div className={styles.formGroup}>
                <label>‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á (‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢):</label>
                <textarea value={displayData?.thesis_title_th || ''} rows="2" disabled />
            </div>
            <div className={styles.formGroup}>
                <label>‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á (‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©):</label>
                <textarea value={displayData?.thesis_title_en || ''} rows="2" disabled />
            </div>
        </fieldset>
        <fieldset>
            <legend>üìã ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï</legend>
            <div className={styles.formGroup}>
                <label>‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡∏à‡∏±‡∏¢* (‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏•‡∏∞‡∏£‡∏∞‡∏ö‡∏∏‡∏à‡∏≥‡∏ô‡∏ß‡∏ô)</label>
                <div className={styles.checkboxGroup}>
                    {Object.keys(initialToolState).map(toolName => (
                        <div key={toolName} className={`${styles.checkboxItem} ${toolName === '‡∏≠‡∏∑‡πà‡∏ô‡πÜ' ? styles.otherItem : ''}`}>
                            <label>
                                <input type="checkbox" name="research-tool" value={toolName} 
                                    checked={researchTools[toolName].checked}
                                    onChange={handleToolChange}
                                /> 
                                {toolName === '‡∏≠‡∏∑‡πà‡∏ô‡πÜ' ? '‡∏≠‡∏∑‡πà‡∏ô‡πÜ:' : toolName}
                            </label>
                            {toolName === '‡∏≠‡∏∑‡πà‡∏ô‡πÜ' && (
                                <input type="text" placeholder="‡∏£‡∏∞‡∏ö‡∏∏‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°"
                                    disabled={!researchTools['‡∏≠‡∏∑‡πà‡∏ô‡πÜ'].checked}
                                    value={researchTools['‡∏≠‡∏∑‡πà‡∏ô‡πÜ'].otherText}
                                    onChange={handleOtherTextChange}
                                />
                            )}
                            <div className={styles.quantityWrapper}>
                                <input type="number" className={styles.quantityInput} min="1"
                                    disabled={!researchTools[toolName].checked}
                                    value={researchTools[toolName].quantity}
                                    onChange={(e) => handleQuantityChange(toolName, e.target.value)}
                                />
                                <span>‡∏â‡∏ö‡∏±‡∏ö</span>
                            </div>
                        </div>
                    ))}
                </div>
            </div>
        </fieldset>
        <fieldset>
            <legend>üìù ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)</legend>
            <div className={styles.formGroup}>
                <label htmlFor="student-comment">‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏™‡πà‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏´‡∏£‡∏∑‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏ñ‡∏∂‡∏á‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà</label>
                <textarea id="student-comment" rows="4" maxLength="250" placeholder="‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°..." 
                    value={comment}
                    onChange={(e) => setComment(e.target.value)}
                />
                <div className={styles.charCounter}>{comment.length} / 250</div>
            </div>
        </fieldset>
        <button type="submit">üì§ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°</button>
      </form>
    </div>
  );
}

export default Form5Page;